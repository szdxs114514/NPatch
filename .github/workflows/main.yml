name: Build Android CI
on:
  workflow_dispatch:
  push:
    branches: [ main ]  # 修改分支名称为 main
  pull_request:
    branches: [ main ]  # 确保与仓库默认分支一致
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: '%compiler% -dumpmachine; %compiler% -dumpversion'
      CCACHE_NOHASHDIR: 'true'
      CCACHE_HARDLINK: 'true'
      CCACHE_BASEDIR: '${{ github.workspace }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Set Gradle properties  # 合并所有 gradle.properties 配置
      run: |
        echo 'org.gradle.parallel=true' >> gradle.properties
        echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        echo 'android.native.buildOutput=verbose' >> gradle.properties

    - name: Write key
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
      run: |
        if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
          echo "androidStorePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> gradle.properties
          echo "androidKeyAlias=${{ secrets.ALIAS }}" >> gradle.properties
          echo "androidKeyPassword=${{ secrets.KEY_PASSWORD }}" >> gradle.properties
          echo "androidStoreFile=key.jks" >> gradle.properties
          echo "${{ secrets.KEY_STORE }}" | base64 --decode > key.jks
        fi

    - name: Checkout libxposed/api
      uses: actions/checkout@v3
      with:
        repository: libxposed/api
        path: libxposed/api
        # 如果私有仓库需要权限：
        # token: ${{ secrets.PAT }}

    - name: Checkout libxposed/service
      uses: actions/checkout@v3
      with:
        repository: libxposed/service
        path: libxposed/service
        # 如果私有仓库需要权限：
        # token: ${{ secrets.PAT }}

    - name: Setup Java
      uses: actions/setup-java@v3.6.0
      with:
        distribution: 'zulu'
        java-version: '17'  # 使用更稳定的 Java 17

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true

    - name: Set up cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        max-size: 2G
        key: ${{ runner.os }}-${{ hashFiles('**/build.gradle') }}  # 更精确的缓存键
        restore-keys: ${{ runner.os }}
        save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    - name: Build dependencies
      working-directory: libxposed
      run: |
        cd api
        ./gradlew :api:publishApiPublicationToMavenLocal
        cd ../service
        ./gradlew :interface:publishInterfacePublicationToMavenLocal

    - name: Build with Gradle
      run: |
        ./gradlew buildAll
      continue-on-error: false  # 移动到 run 外部

    - name: Upload Debug artifact
      uses: actions/upload-artifact@v4
      with:
        name: npatch-debug
        path: out/debug/*

    - name: Upload Release artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: npatch-release
        path: out/release/*

    - name: Upload symbols
      uses: actions/upload-artifact@v4
      with:
        name: symbols
        path: |
          patch-loader/build/symbols

    - name: Upload mappings
      uses: actions/upload-artifact@v4
      with:
        name: mappings
        path: |
          patch-loader/build/outputs/mapping
          manager/build/outputs/mapping

    - name: Clean up sensitive files  # 清理敏感文件
      run: |
        rm -f key.jks gradle.properties
